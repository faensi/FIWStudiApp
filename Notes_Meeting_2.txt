2nd Meeting


Git explanation:
No Server Required 
every User has the complete History

How to Use:
master branch:
---> merge conflicts (if multiple users work on the same file)

after having it set up
1. GIT pull
2. GIT commit (updates the local repository) (modification manual) (only has metadata: file a line 40 changed)
--> commit messages: brief description of what you did (in present tense e.g. 'change variable name "test123" to "counter"')  
--> commit as often as possible (whenevery something runs)
4. GIT push (updates the shared repository) (autopulls before)

We are using the "3-branch model"
Merging:
master branch is for the end user
  2nd branch: development
    - whenever dev works perfectly ---> merge to master
  feature branch:
   ---> dev feature

everything but meta files should go to GIT
.gitignore (e.g. .intellij folder; target; build; jar; app)
---> ask for template for .gitignore google: template android studio .gitignore



#Programmierprojekt